searchState.loadedDescShard("iroh", 1, "Calls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRate limits.\nSocket to serve metrics on.\nConfiguration for the Relay server, disabled if <code>None</code>.\nThe iroh secret key of the Relay server.\nRequests graceful shutdown.\nStarts the server.\nConfiguration for the STUN server, disabled if <code>None</code>.\nThe socket address the STUN server is listening on.\nReturns the handle for the task.\nTLS configuration for the HTTPS server.\nThe TLS certificate chain.\nConfiguration for Let’s Encrypt certificates.\nThe TLS private key.\nThe <code>AlternateServer</code>atribute\nErrors that can occur when handling a STUN packet.\nThe <code>ErrorCode</code>atribute\nerror response\nThe <code>Fingerprint</code>atribute\nindication\nSTUN request had bogus fingerprint.\nThe STUN message could not be parsed or is otherwise …\nSTUN response has malformed attributes.\nThe <code>MappedAddress</code>atribute\nThe STUN message class. Although there are four message …\nClass used to decode STUN messages\nThe <code>MessageIntegrity</code>atribute\nThe <code>MessageIntegritySha256</code>atribute\nSTUN request didn’t end in fingerprint.\nThe <code>Nonce</code>atribute\nSTUN request is not a binding request when it should be.\nSTUN packet is not a response when it should be.\nThe <code>PasswordAlgorithm</code>atribute\nThe <code>PasswordAlgorithms</code>atribute\nThe <code>Realm</code>atribute\nrequest\nThe <code>Software</code>atribute\nSTUN Attributes that can be attached to a <code>StunMessage</code>\nDescribes an error decoding a <code>StunMessage</code>\nsuccess response\nThe transaction ID is a 96-bit identifier, used to …\nThe <code>Unknown</code>atribute\nThe <code>UnknownAttributes</code>atribute\nThe <code>UserHash</code>atribute\nThe <code>UserName</code>atribute\nThe <code>XorMappedAddress</code>atribute\nReturns a reference to the internal attribute value or an …\nReturns a reference to the bytes that represents the …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns the STUN attribute type of this instance.\nDecodes the STUN raw buffer\nCreates a cryptographically random transaction ID chosen …\nReturns a reference to the <code>AlternateServer</code> attribute.\nReturns a reference to the <code>ErrorCode</code> attribute.\nReturns a reference to the <code>Fingerprint</code> attribute.\nReturns a reference to the <code>MappedAddress</code> attribute.\nReturns a reference to the <code>MessageIntegrity</code> attribute.\nReturns a reference to the <code>MessageIntegritySha256</code> …\nReturns a reference to the <code>Nonce</code> attribute.\nReturns a reference to the <code>PasswordAlgorithm</code> attribute.\nReturns a reference to the <code>PasswordAlgorithms</code> attribute.\nReturns a reference to the <code>Realm</code> attribute.\nReturns a reference to the <code>Software</code> attribute.\nReturns a reference to the <code>Unknown</code> attribute.\nReturns a reference to the <code>UnknownAttributes</code> attribute.\nReturns a reference to the <code>UserHash</code> attribute.\nReturns a reference to the <code>UserName</code> attribute.\nReturns a reference to the <code>XorMappedAddress</code> attribute.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the context associated to this decoder\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReports whether b is a STUN message.\nReturns true if this <code>StunAttribute</code> is <code>AlternateServer</code>\nReturns true if this <code>StunAttribute</code> is <code>ErrorCode</code>\nReturns true if this <code>StunAttribute</code> is <code>Fingerprint</code>\nReturns true if this <code>StunAttribute</code> is <code>MappedAddress</code>\nReturns true if this <code>StunAttribute</code> is <code>MessageIntegrity</code>\nReturns true if this <code>StunAttribute</code> is …\nReturns true if this <code>StunAttribute</code> is <code>Nonce</code>\nReturns true if this <code>StunAttribute</code> is <code>PasswordAlgorithm</code>\nReturns true if this <code>StunAttribute</code> is <code>PasswordAlgorithms</code>\nReturns true if this <code>StunAttribute</code> is <code>Realm</code>\nReturns true if this <code>StunAttribute</code> is <code>Software</code>\nReturns true if this <code>StunAttribute</code> is <code>Unknown</code>\nReturns true if this <code>StunAttribute</code> is <code>UnknownAttributes</code>\nReturns true if this <code>StunAttribute</code> is <code>UserHash</code>\nReturns true if this <code>StunAttribute</code> is <code>UserName</code>\nReturns true if this <code>StunAttribute</code> is <code>XorMappedAddress</code>\nSTUN Methods Registry\nParses a STUN binding request.\nParses a successful binding response STUN packet. The IP …\nGenerates a binding request STUN packet.\nGenerates a binding response.\nBinding\nReserved\nShared secret\nA drop guard to clean up test infrastructure.\nHandle and drop guard for test DNS and Pkarr servers.\nCreate a DNS resolver with a single nameserver.\nCreate a <code>ConcurrentDiscovery</code> with <code>DnsDiscovery</code> and …\nCreate a <code>DnsResolver</code> configured to use the test DNS server.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe socket address of the DNS server.\nThe node origin domain.\nWait until a Pkarr announce for a node is published to the …\nThe HTTP URL of the Pkarr server.\nRun DNS and Pkarr servers on localhost.\nRuns a relay server with STUN enabled suitable for tests.\nRun DNS and Pkarr servers on localhost with the specified …\nA token containing everything to get a file from the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new ticket.\nThe <code>NodeAddr</code> of the provider for this ticket.\nX.509 certificate handling.\nCreate a TLS client configuration.\nCreate a TLS server configuration.\nAn error that occurs during certificate generation.\nAn X.509 certificate with a libp2p-specific extension is …\nThe contents of the specific libp2p extension, containing …\nAn error that occurs during certificate parsing.\nAn error that occurs during signature verification.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a self-signed TLS certificate that includes a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempts to parse the provided bytes as a <code>P2pCertificate</code>.\nThe <code>PublicKey</code> of the remote peer.\nVerify the <code>signature</code> of the <code>message</code> signed by the secret …\nA join handle that owns the task it is running, and aborts …\nHolds a handle to a task and aborts it on drop.\nResolves to pending if the inner is <code>None</code>.\nA join handle that owns the task it is running, and aborts …\nIO utility to chain <code>AsyncRead</code>s together.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFuture to be polled.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a <code>CancelOnDrop</code> with a name and a handle to a task.\nStream for the <code>chain</code> method.\nChain two <code>AsyncRead</code>s together.\nReturns the argument unchanged.\nGets mutable references to the underlying readers in this …\nGets pinned mutable references to the underlying readers …\nGets references to the underlying readers in this <code>Chain</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Chain</code>, returning the wrapped readers.\nBuilder for the <code>Node</code>.\nUse a custom discovery mechanism.\nThe default bind addr of the RPC .\nUse the default discovery mechanism.\nDisable docs completely.\nGarbage collection is disabled.\nConfiguration for node discovery.\nStorage backend for documents.\nPersistent node.\nPolicy for garbage collection.\nGarbage collection is run at the given interval.\nThe quic-rpc server endpoint for the iroh node.\nIn memory\nIn memory node.\nIn-memory storage.\nA server which implements the iroh node.\nUse no node discovery mechanism.\nFile-based persistent storage.\nOn disk persistet, at this location.\nA node that is initialized but not yet spawned.\nHandler for incoming connections.\nThe current status of the RPC endpoint.\nRunning on this port.\nHow often to save node data.\nStopped.\nConfiguration for storage.\nHandle an incoming connection.\nReturns a token that can be used to cancel the node.\nReturn a client to control this node over an in-memory …\nReturns the <code>Endpoint</code> of the node.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCallback to register when a gc loop is done\nReturns a protocol handler for an ALPN.\nGet the relay server we are connected to.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe address on which the node socket is bound.\nConvenience method to get just the addr part of …\nLists the local endpoint of this node.\nReturns a reference to the used <code>LocalPoolHandle</code>.\nReturns a new builder for the <code>Node</code>, by default configured …\nReturns a new builder for the <code>Node</code>, by default configured …\nReturns <code>Some(addr)</code> if an RPC endpoint is running, <code>None</code> …\nGet the addressing information of this endpoint that …\nReturns the <code>PublicKey</code> of the node.\nReturns a new builder for the <code>Node</code>, configured to persist …\nReturns a new builder for the <code>Node</code>, configured to persist …\nShutdown the node.\nShutdown the different parts of the node concurrently.\nActual connected RPC client.\nThe port we are connected on.\nBuilder for the <code>Node</code>.\nUse a custom discovery mechanism.\nDefault bind address for the node. 11204 is “iroh” in …\nDefault interval between GC runs.\nThe default bind addr of the RPC .\nUse the default discovery mechanism.\nDisable docs completely.\nGarbage collection is disabled.\nConfiguration for node discovery.\nStorage backend for documents.\nA server endpoint that does nothing. Accept will never …\nHow long we wait at most for some endpoints to be …\nPolicy for garbage collection.\nGarbage collection is run at the given interval.\nIn memory\nIn-memory storage.\nUse no node discovery mechanism.\nFile-based persistent storage.\nOn disk persistet, at this location.\nA node that is initialized but not yet spawned.\nConfiguration for storage.\nRegisters a protocol handler for incoming connections.\nBinds the node service to a different socket.\nReturns the <code>crate::blobs::store::Store</code> used by the node.\nBuilds a node without spawning it.\nReturns a client to control this node over an in-memory …\nDisables documents support on this node completely.\nOptionally set a custom DNS resolver to use for the magic …\nReturns a reference to the <code>Downloader</code> used by the node.\nConfigure the default iroh rpc endpoint, on the default …\nConfigure the default iroh rpc endpoint.\nReturns the <code>Endpoint</code> of the node.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCallback to register when a gc loop is done\nSets the garbage collection policy.\nReturns a protocol handler for an ALPN.\nReturns a reference to the <code>Gossip</code> handle used by the node.\nSkip verification of SSL certificates from relay servers\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether to log the SSL pre-master key.\nReturns a reference to the used <code>LocalPoolHandle</code>.\nMakes a an RPC endpoint that uses a QUIC transport\nSets the node discovery mechanism.\nPersist all node data in the provided directory.\nRegister a callback for when GC is done.\nRegisters the core iroh protocols (blobs, gossip, docs).\nSets the relay servers to assist in establishing …\nConfigure rpc endpoint.\nUses the given <code>SecretKey</code> for the <code>PublicKey</code> instead of a …\nSpawns the <code>Node</code> in a tokio task.\nSpawns the node and starts accepting connections.\nCreates a new builder for <code>Node</code> using the given databases.\nWrapper around <code>Engine</code> so that we can implement our RPC …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHelper trait to facilite casting from <code>Arc&lt;dyn T&gt;</code> to …\nHandler for incoming connections.\nHandle an incoming connection.\nReturns an iterator of all registered ALPN protocol …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the registered protocol handler for an ALPN as a …\nReturns the registered protocol handler for an ALPN as a …\nInserts a protocol handler.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalled when the node shuts down.\nCalled when the node shuts down.\nShuts down all protocol handlers.\nName used for logging when new node addresses are added …\nChannel cap for getting blobs over RPC\nChunk size for getting blobs over RPC\nInvoke validate on the database and stream out the result\nInvoke validate on the database and stream out the result\nThis module contains an impl block on <code>DocsEngine</code> with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCapacity for the flume channels to forward sync store …\nThe current status of the RPC endpoint.\nRunning on this port.\nStopped.\nCleans up an existing rpc lock\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLoad the current RPC status from the given location.\nStore the current rpc status.\nActual connected RPC client.\nThe port we are connected on.\nThe request enum, listing all possible requests.\nThe response enum, listing all possible responses.\nThe RPC service for the iroh provider process.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new document author.\nResponse for <code>CreateRequest</code>\nDelete an author\nResponse for <code>DeleteRequest</code>\nExports an author\nResponse for <code>ExportRequest</code>\nGet the default author.\nResponse for <code>GetDefaultRequest</code>\nImport author from secret key\nResponse to <code>ImportRequest</code>\nList document authors for which we have a secret key.\nResponse for <code>ListRequest</code>\nResponse for <code>GetDefaultRequest</code>\nThe id of the author to delete\nThe id of the author to delete\nThe author\nThe author to import\nThe author id\nThe id of the created author\nThe id of the author\nThe id of the author\nThe author id of the imported author\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAbort the request due to an error on the client side\nA request to the node to provide the data at the given path\nWrapper around <code>AddProgress</code>.\nWrite a blob from a byte stream\nWrapper around <code>AddProgress</code>.\nWrite a blob from a byte stream\nA chunk of stream data\nA request to the node to validate the integrity of all …\nCreate a collection.\nA response to a create collection request\nChunks of entry data.\nDelete a blob\nA request to the node to download and share the data …\nProgress response for <code>DownloadRequest</code>\nThe entry header.\nA request to the node to download and share the data …\nProgress response for <code>ExportRequest</code>\nList all blobs, including collections\nList all blobs, including collections\nGet the bytes for a hash\nResponse to <code>ReadAtRequest</code>\nA request to the node to validate the integrity of all …\nThe collection\nIf the format is <code>BlobFormat::HashSeq</code>, all children are …\nSet to <code>ExportFormat::Collection</code> if the <code>hash</code> refers to a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis mandatory field contains the hash of the data to …\nThe hash of the blob to export.\nHash to get bytes for\nName of the tag\nThe resulting hash.\nTrue if the provider can assume that the data will not …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLength of the data to get\nWhether to directly start the download or add it to the …\nThe mode of exporting.\nThis mandatory field specifies the nodes to download the …\nOffset to start reading at\nThe path to the data to provide.\nThe filepath to where the data should be saved\nrepair the store by dropping inconsistent blobs\nrepair the store by downgrading blobs from complete to …\nTag to tag the data with.\nOptional tag to tag the data with.\nTag to tag the data with.\nTag option.\nThe resulting tag.\nTags that should be deleted after creation.\nWhether to wrap the added data in a collection\nThe data chunk\nWhether the blob is complete\nThe size of the blob\nOpen a document\nResponse to <code>CloseRequest</code>\nCreate a new document\nResponse to <code>CreateRequest</code>\nDelete entries in a document\nResponse to <code>DelRequest</code>\nList all documents\nSubscribe to events for a document.\nResponse to <code>DocSubscribeRequest</code>\nStop the live sync for a doc, and optionally delete the …\nResponse to <code>DropRequest</code>\nA request to the node to save the data of the entry to the …\nProgress messages for an doc export operation\nGet a download policy\nResponse to <code>GetDownloadPolicyRequest</code>\nGet entries from a document\nResponse to <code>GetExactRequest</code>\nGet entries from a document\nResponse to <code>GetManyRequest</code>\nGet peers for document\nResponse to <code>GetSyncPeersRequest</code>\nA request to the node to add the data at the given …\nWrapper around <code>ImportProgress</code>.\nImport a document from a capability.\nResponse to <code>ImportRequest</code>\nStop the live sync for a doc, and optionally delete the …\nResponse to <code>LeaveRequest</code>\nResponse to <code>DocListRequest</code>\nOpen a document\nResponse to <code>OpenRequest</code>\nSet a download policy\nResponse to <code>SetDownloadPolicyRequest</code>\nSet an entry in a document via its hash\nResponse to <code>SetHashRequest</code>\nSet an entry in a document\nResponse to <code>SetRequest</code>\nShare a document with peers over a ticket.\nThe response to <code>ShareRequest</code>\nStart to sync a doc with peers.\nResponse to <code>StartSyncRequest</code>\nGet info on a document\nResponse to <code>StatusRequest</code>\nConfiguration of the addresses in the ticket.\nAuthor matcher\nAuthor of this entry.\nAuthor of this entry.\nAuthor of this entry.\nAuthor of this entry.\nThe capability over the document.\nThe namespace capability.\nThe document id\nthe document id\nThe document id\nThe document id\nThe document id\nThe document id\nThe document id\nThe document id\nThe document id\nThe document id\nThe document id\nThe document id.\nThe document id\nThe document id\nThe document id\nThe document id\nThe document id\nThe document id\nThe newly-created entry.\nThe entry you want to export\nThe document entry\nThe document entry\nThe event that occurred on the document\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHash of this entry.\nThe document id\nThe document id\nTrue if the provider can assume that the data will not …\nWhether to include empty entries (prefix deletion markers)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKey of this entry.\nKey of this entry.\nKey of this entry.\nKey matcher\nWhether to share read or write access to the document\nThe mode of exporting. Setting to <code>ExportMode::TryReference</code> …\nThe filepath to the data\nThe filepath to where the data should be saved\nList of peers to join\nList of peers ids\nDownload policy\nThe download policy\nPrefix to delete.\nQuery to run\nThe number of entries that were removed.\nSize of this entry.\nLive sync status\nValue of this entry.\nBroadcast a message to all nodes in the swarm\nBroadcast a message to all direct neighbors\nA message was received\nWe missed some messages\nA request to the node to subscribe to gossip events.\nUpdate from a subscribed gossip topic\nSend a gossip message\nThe nodes to bootstrap the subscription from\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe capacity of the subscription\nThe topic to subscribe to\nGet connection information about a specific node\nA response to a connection request\nList connection information about all the nodes we know …\nA response to a connections request\nCounter stats\nA request to get information the identity of the node.\nA request to watch for the node status\nA request to shutdown the node\nGet stats for the running Iroh node\nResponse to <code>StatsRequest</code>\nA request to get information about the status of the node.\nThe response to a version request\nThe response to a watch request\nInformation about a connection\nInformation about a connection to a node\nThe counter description\nForce shutdown\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe node identifier\nMap of statistics\nThe counter value\nThe version of the node\nThe version of the node\nDelete a tag\nList all collections\nList all tags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nList hash seq tags\nList hash seq tags\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nName of the tag\nList raw tags\nList raw tags\nUtilities for filesystem operations.\nUtilities for working with tokio io\nConfiguration paths for iroh.\nGeneric utilities to track progress of data transfers.\nA data source\nInformation about the content on a path\nThis function converts an already canonicalized path to a …\ntotal number of files in the directory\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper function that translates a key that was derived …\nLoads a <code>SecretKey</code> from the provided file, or stores a …\nReturns blob name for this data source.\nCustom name\nCreates a new <code>DataSource</code> from a <code>PathBuf</code>.\nReturns the path of this data source.\nPath to the file\nWalks the directory to get the total size and number of …\nHelper function that creates a document key from a …\nThis function converts a canonicalized relative path to a …\nCreate data sources from a directory.\nCreate data sources from a path.\ntotal size of all the files in the directory\nCreates a new <code>DataSource</code> from a <code>PathBuf</code> and a custom name.\nTodo: gather more information about validation errors. …\nThe data failed to validate\nGeneric io error. We were unable to read the data.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPath to the node’s file based blob store.\nPath to the console state\nPath to the <code>iroh_docs::AuthorId</code> of the node’s default …\nPath to the iroh-docs document database\nPaths to files or directories used by Iroh.\nPath to store known peer data.\nPath to RPC lock file, containing the RPC port if running.\nPath to the node’s secret key for the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet the path for this <code>IrohPaths</code> by joining the name to a …\nThe reader has been dropped.\nThe actual implementation.\nA sender for progress messages.\nA progress event containing the current offset.\nA wrapper around <code>AsyncRead</code> which increments a …\nA generic progress event emitter.\nUpdate from a <code>ProgressReader</code>.\nA writer that tries to send the total number of bytes …\nBlock until the message is sent.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIncrements the progress by <em>amount</em>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the inner writer\nCreates a new emitter.\nCreate a new <code>ProgressWriter</code> from an inner writer\nCreate a new progress sender.\nCreate a no-op progress sender.\nSend a message\nSets a new total in case you did not now the total up …\nReturns a receiver that gets incremental values.\nTry to send a message.\nWraps an <code>AsyncRead</code> which implicitly calls …")