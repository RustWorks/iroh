(function() {var type_impls = {
"iroh":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CC%3E-for-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-AsRef%3CC%3E-for-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;C&gt; for RpcClient&lt;S, C&gt;<div class=\"where\">where\n    S: Service,\n    C: Connector&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;C</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<C>","iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-Clone-for-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for RpcClient&lt;S, C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; RpcClient&lt;S, C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-Debug-for-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for RpcClient&lt;S, C&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; RpcClient&lt;S, C&gt;<div class=\"where\">where\n    C: Connector&lt;S&gt;,\n    S: Service,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.server_streaming\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">server_streaming</a>&lt;M&gt;(\n    &amp;self,\n    msg: M\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Stream&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;M as ServerStreamingMsg&lt;S&gt;&gt;::Response, ItemError&lt;C&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;, Error&lt;C&gt;&gt;<div class=\"where\">where\n    M: ServerStreamingMsg&lt;S&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Bidi call to the server, request opens a stream, response is a stream</p>\n</div></details></div></details>",0,"iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; RpcClient&lt;S, C&gt;<div class=\"where\">where\n    C: Connector&lt;S&gt;,\n    S: Service,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_server_streaming\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">try_server_streaming</a>&lt;M&gt;(\n    &amp;self,\n    msg: M\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Stream&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;M as TryServerStreamingMsg&lt;S&gt;&gt;::Item, ItemError&lt;C, &lt;M as TryServerStreamingMsg&lt;S&gt;&gt;::ItemError&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;, Error&lt;C, &lt;M as TryServerStreamingMsg&lt;S&gt;&gt;::CreateError&gt;&gt;<div class=\"where\">where\n    M: TryServerStreamingMsg&lt;S&gt;,\n    <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;M as TryServerStreamingMsg&lt;S&gt;&gt;::Item, &lt;M as TryServerStreamingMsg&lt;S&gt;&gt;::ItemError&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;S as Service&gt;::Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&lt;S as Service&gt;::Res&gt;,\n    <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StreamCreated, &lt;M as TryServerStreamingMsg&lt;S&gt;&gt;::CreateError&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;S as Service&gt;::Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&lt;S as Service&gt;::Res&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Bidi call to the server, request opens a stream, response is a stream</p>\n</div></details></div></details>",0,"iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; RpcClient&lt;S, C&gt;<div class=\"where\">where\n    S: Service,\n    C: Connector&lt;In = &lt;S as Service&gt;::Res, Out = &lt;S as Service&gt;::Req&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bidi\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">bidi</a>&lt;M&gt;(\n    &amp;self,\n    msg: M\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(UpdateSink&lt;C, &lt;M as BidiStreamingMsg&lt;S&gt;&gt;::Update&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Stream&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;M as BidiStreamingMsg&lt;S&gt;&gt;::Response, ItemError&lt;C&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;), Error&lt;C&gt;&gt;<div class=\"where\">where\n    M: BidiStreamingMsg&lt;S&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Bidi call to the server, request opens a stream, response is a stream</p>\n</div></details></div></details>",0,"iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; RpcClient&lt;S, C&gt;<div class=\"where\">where\n    S: Service,\n    C: Connector&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.client_streaming\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">client_streaming</a>&lt;M&gt;(\n    &amp;self,\n    msg: M\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(UpdateSink&lt;C, &lt;M as ClientStreamingMsg&lt;S&gt;&gt;::Update&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;M as ClientStreamingMsg&lt;S&gt;&gt;::Response, ItemError&lt;C&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;), Error&lt;C&gt;&gt;<div class=\"where\">where\n    M: ClientStreamingMsg&lt;S&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Call to the server that allows the client to stream, single response</p>\n</div></details></div></details>",0,"iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; RpcClient&lt;S, C&gt;<div class=\"where\">where\n    S: Service,\n    C: Connector&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_inner</a>(self) -&gt; C</h4></section></summary><div class=\"docblock\"><p>Get the underlying connection</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map</a>&lt;SNext&gt;(\n    self\n) -&gt; RpcClient&lt;SNext, MappedConnector&lt;&lt;SNext as Service&gt;::Res, &lt;SNext as Service&gt;::Req, C&gt;&gt;<div class=\"where\">where\n    SNext: Service,\n    &lt;S as Service&gt;::Req: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;SNext as Service&gt;::Req&gt;,\n    &lt;SNext as Service&gt;::Res: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&lt;S as Service&gt;::Res&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Map this channel’s service into an inner service.</p>\n<p>This method is available if the required bounds are upheld:\nSNext::Req: Into&lt;S::Req&gt; + TryFrom&lt;S::Req&gt;,\nSNext::Res: Into&lt;S::Res&gt; + TryFrom&lt;S::Res&gt;,</p>\n<p>Where SNext is the new service to map to and S is the current inner service.</p>\n<p>This method can be chained infintely.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">boxed</a>(self) -&gt; RpcClient&lt;S&gt;<div class=\"where\">where\n    C: BoxableConnector&lt;&lt;S as Service&gt;::Res, &lt;S as Service&gt;::Req&gt;,</div></h4></section></summary><div class=\"docblock\"><p>box</p>\n</div></details></div></details>",0,"iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; RpcClient&lt;S, C&gt;<div class=\"where\">where\n    S: Service,\n    C: Connector&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(source: C) -&gt; RpcClient&lt;S, C&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new rpc client for a specific [Service] given a compatible\n[Connector].</p>\n<p>This is where a generic typed connection is converted into a client for a specific service.</p>\n<p>You can get a client for a nested service by calling <a href=\"RpcClient::map\">map</a>.</p>\n</div></details></div></details>",0,"iroh::client::RpcClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RpcClient%3CS,+C%3E\" class=\"impl\"><a href=\"#impl-RpcClient%3CS,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, C&gt; RpcClient&lt;S, C&gt;<div class=\"where\">where\n    S: Service,\n    C: Connector&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rpc\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">rpc</a>&lt;M&gt;(\n    &amp;self,\n    msg: M\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;M as RpcMsg&lt;S&gt;&gt;::Response, Error&lt;C&gt;&gt;<div class=\"where\">where\n    M: RpcMsg&lt;S&gt;,</div></h4></section></summary><div class=\"docblock\"><p>RPC call to the server, single request, single response</p>\n</div></details></div></details>",0,"iroh::client::RpcClient"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()