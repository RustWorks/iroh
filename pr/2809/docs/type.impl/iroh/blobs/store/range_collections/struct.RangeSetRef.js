(function() {var type_impls = {
"iroh":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RangeSetRef%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-RangeSetRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iroh::blobs::store::bao_tree::ChunkRangesRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-RangeSetRef%3CT%3E\" class=\"impl\"><a href=\"#impl-Ord-for-RangeSetRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details></div></details>","Ord","iroh::blobs::store::bao_tree::ChunkRangesRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-RangeSetRef%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-RangeSetRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","iroh::blobs::store::bao_tree::ChunkRangesRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-RangeSetRef%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialOrd-for-RangeSetRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","iroh::blobs::store::bao_tree::ChunkRangesRef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangeSetRef%3CT%3E\" class=\"impl\"><a href=\"#impl-RangeSetRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.empty\" class=\"fn\">empty</a>() -&gt; &amp;'static <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new range set reference for an empty range set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.single\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.single\" class=\"fn\">single</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new range set reference for a single value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.new\" class=\"fn\">new</a>(boundaries: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Create a new range set reference</p>\n<p>This performs a check that the boundaries are strictly sorted.\nIf you want to avoid this check, use <code>new_unchecked</code>\n(behind a feature flag because it is unsafe)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.split\" class=\"fn\">split</a>(&amp;self, at: T) -&gt; (&amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;, &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>Split this range set into two parts <code>left</code>, <code>right</code> at position <code>at</code>,\nso that <code>left</code> is identical to <code>self</code> for all <code>x &lt; at</code>\nand <code>right</code> is identical to <code>self</code> for all <code>x &gt;= at</code>.</p>\n<p>More precisely:\ncontains(left, x) == contains(ranges, x) for x &lt; at\ncontains(right, x) == contains(ranges, x) for x &gt;= at</p>\n<p>This is not the same as limiting the ranges to the left or right of\n<code>at</code>, but it is much faster. It requires just a binary search and no\nallocations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(boundaries: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>) -&gt; &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new range set reference without checking that the boundaries are\nstrictly sorted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boundaries\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.boundaries\" class=\"fn\">boundaries</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>The boundaries of the range set, guaranteed to be strictly sorted</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.contains\" class=\"fn\">contains</a>(&amp;self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>true if the value is contained in the range set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>true if the range set is empty</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_all\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.is_all\" class=\"fn\">is_all</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"iroh/blobs/store/range_collections/range_set/trait.RangeSetEntry.html\" title=\"trait iroh::blobs::store::range_collections::range_set::RangeSetEntry\">RangeSetEntry</a>,</div></h4></section></summary><div class=\"docblock\"><p>true if the range set contains all values</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.intersects\" class=\"fn\">intersects</a>(&amp;self, that: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>true if this range set intersects from another range set</p>\n<p>This is just the opposite of <code>is_disjoint</code>, but is provided for\nbetter discoverability.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_disjoint\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.is_disjoint\" class=\"fn\">is_disjoint</a>(&amp;self, that: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>true if this range set is disjoint from another range set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_subset\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.is_subset\" class=\"fn\">is_subset</a>(&amp;self, that: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>true if this range set is a superset of another range set</p>\n<p>A range set is considered to be a superset of itself</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_superset\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.is_superset\" class=\"fn\">is_superset</a>(&amp;self, that: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p>true if this range set is a subset of another range set</p>\n<p>A range set is considered to be a subset of itself</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"iroh/blobs/store/range_collections/range_set/struct.Iter.html\" title=\"struct iroh::blobs::store::range_collections::range_set::Iter\">Iter</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;_, T&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>iterate over all ranges in this range set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;A&gt;(&amp;self, that: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSet.html\" title=\"struct iroh::blobs::store::range_collections::RangeSet\">RangeSet</a>&lt;A&gt;<div class=\"where\">where\n    A: Array&lt;Item = T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>intersection</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.union\" class=\"fn\">union</a>&lt;A&gt;(&amp;self, that: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSet.html\" title=\"struct iroh::blobs::store::range_collections::RangeSet\">RangeSet</a>&lt;A&gt;<div class=\"where\">where\n    A: Array&lt;Item = T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>union</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.difference\" class=\"fn\">difference</a>&lt;A&gt;(&amp;self, that: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSet.html\" title=\"struct iroh::blobs::store::range_collections::RangeSet\">RangeSet</a>&lt;A&gt;<div class=\"where\">where\n    A: Array&lt;Item = T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>difference</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html#tymethod.symmetric_difference\" class=\"fn\">symmetric_difference</a>&lt;A&gt;(&amp;self, that: &amp;<a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSet.html\" title=\"struct iroh::blobs::store::range_collections::RangeSet\">RangeSet</a>&lt;A&gt;<div class=\"where\">where\n    A: Array&lt;Item = T&gt;,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>symmetric difference (xor)</p>\n</div></details></div></details>",0,"iroh::blobs::store::bao_tree::ChunkRangesRef"],["<section id=\"impl-Eq-for-RangeSetRef%3CT%3E\" class=\"impl\"><a href=\"#impl-Eq-for-RangeSetRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","iroh::blobs::store::bao_tree::ChunkRangesRef"],["<section id=\"impl-StructuralPartialEq-for-RangeSetRef%3CT%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-RangeSetRef%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"iroh/blobs/store/range_collections/struct.RangeSetRef.html\" title=\"struct iroh::blobs::store::range_collections::RangeSetRef\">RangeSetRef</a>&lt;T&gt;</h3></section>","StructuralPartialEq","iroh::blobs::store::bao_tree::ChunkRangesRef"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()