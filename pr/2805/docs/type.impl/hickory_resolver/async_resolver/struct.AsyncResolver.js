(function() {var type_impls = {
"iroh":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncResolver%3CGenericConnector%3CTokioRuntimeProvider%3E%3E\" class=\"impl\"><a href=\"#impl-AsyncResolver%3CGenericConnector%3CTokioRuntimeProvider%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsyncResolver&lt;GenericConnector&lt;TokioRuntimeProvider&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.tokio\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">tokio</a>(\n    config: ResolverConfig,\n    options: ResolverOpts\n) -&gt; AsyncResolver&lt;GenericConnector&lt;TokioRuntimeProvider&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new Tokio based <code>AsyncResolver</code> with the provided configuration.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">§</a>Arguments</h5>\n<ul>\n<li><code>config</code> - configuration, name_servers, etc. for the Resolver</li>\n<li><code>options</code> - basic lookup options for the resolver</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A tuple containing the new <code>AsyncResolver</code> and a future that drives the\nbackground task that runs resolutions for the <code>AsyncResolver</code>. See the\ndocumentation for <code>AsyncResolver</code> for more information on how to use\nthe background future.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tokio_from_system_conf\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">tokio_from_system_conf</a>(\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AsyncResolver&lt;GenericConnector&lt;TokioRuntimeProvider&gt;&gt;, ResolveError&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new Tokio based Resolver with the system configuration.</p>\n<p>This will use <code>/etc/resolv.conf</code> on Unix OSes and the registry on Windows.</p>\n</div></details></div></details>",0,"iroh::net::dns::DnsResolver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncResolver%3CP%3E\" class=\"impl\"><a href=\"#impl-AsyncResolver%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; AsyncResolver&lt;P&gt;<div class=\"where\">where\n    P: ConnectionProvider,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_conn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_with_conn</a>(\n    config: ResolverConfig,\n    options: ResolverOpts,\n    conn_provider: P\n) -&gt; AsyncResolver&lt;P&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new <code>AsyncResolver</code> with the provided configuration.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">§</a>Arguments</h5>\n<ul>\n<li><code>config</code> - configuration, name_servers, etc. for the Resolver</li>\n<li><code>options</code> - basic lookup options for the resolver</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A tuple containing the new <code>AsyncResolver</code> and a future that drives the\nbackground task that runs resolutions for the <code>AsyncResolver</code>. See the\ndocumentation for <code>AsyncResolver</code> for more information on how to use\nthe background future.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_system_conf_with_provider\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_system_conf_with_provider</a>(\n    conn_provider: P\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AsyncResolver&lt;P&gt;, ResolveError&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new Resolver with the system configuration.</p>\n<p>This will use <code>/etc/resolv.conf</code> on Unix OSes and the registry on Windows.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">lookup</a>&lt;N&gt;(\n    &amp;self,\n    name: N,\n    record_type: RecordType\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Lookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Generic lookup for any RecordType</p>\n<p><em>WARNING</em> this interface may change in the future, see if one of the specializations would be better.</p>\n<h5 id=\"arguments-1\"><a class=\"doc-anchor\" href=\"#arguments-1\">§</a>Arguments</h5>\n<ul>\n<li><code>name</code> - name of the record to lookup, if name is not a valid domain name, an error will be returned</li>\n<li><code>record_type</code> - type of record to lookup, all RecordData responses will be filtered to this type</li>\n</ul>\n<h5 id=\"returns-1\"><a class=\"doc-anchor\" href=\"#returns-1\">§</a>Returns</h5></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_ip\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">lookup_ip</a>&lt;N&gt;(&amp;self, host: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;LookupIp, ResolveError&gt;<div class=\"where\">where\n    N: IntoName + TryParseIp,</div></h4></section></summary><div class=\"docblock\"><p>Performs a dual-stack DNS lookup for the IP for the given hostname.</p>\n<p>See the configuration and options parameters for controlling the way in which A(Ipv4) and AAAA(Ipv6) lookups will be performed. For the least expensive query a fully-qualified-domain-name, FQDN, which ends in a final <code>.</code>, e.g. <code>www.example.com.</code>, will only issue one query. Anything else will always incur the cost of querying the <code>ResolverConfig::domain</code> and <code>ResolverConfig::search</code>.</p>\n<h5 id=\"arguments-2\"><a class=\"doc-anchor\" href=\"#arguments-2\">§</a>Arguments</h5>\n<ul>\n<li><code>host</code> - string hostname, if this is an invalid hostname, an error will be returned.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_hosts\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_hosts</a>(&amp;mut self, hosts: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Hosts&gt;)</h4></section></summary><div class=\"docblock\"><p>Customizes the static hosts used in this resolver.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">reverse_lookup</a>(\n    &amp;self,\n    query: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ReverseLookup, ResolveError&gt;</h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<h5 id=\"arguments-3\"><a class=\"doc-anchor\" href=\"#arguments-3\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a type which can be converted to <code>Name</code> via <code>From</code>.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ipv4_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">ipv4_lookup</a>&lt;N&gt;(&amp;self, query: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ipv4Lookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<p><em>hint</em> queries that end with a ‘.’ are fully qualified names and are cheaper lookups</p>\n<h5 id=\"arguments-4\"><a class=\"doc-anchor\" href=\"#arguments-4\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a string which parses to a domain name, failure to parse will return an error</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ipv6_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">ipv6_lookup</a>&lt;N&gt;(&amp;self, query: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ipv6Lookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<p><em>hint</em> queries that end with a ‘.’ are fully qualified names and are cheaper lookups</p>\n<h5 id=\"arguments-5\"><a class=\"doc-anchor\" href=\"#arguments-5\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a string which parses to a domain name, failure to parse will return an error</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mx_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">mx_lookup</a>&lt;N&gt;(&amp;self, query: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;MxLookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<p><em>hint</em> queries that end with a ‘.’ are fully qualified names and are cheaper lookups</p>\n<h5 id=\"arguments-6\"><a class=\"doc-anchor\" href=\"#arguments-6\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a string which parses to a domain name, failure to parse will return an error</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ns_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">ns_lookup</a>&lt;N&gt;(&amp;self, query: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;NsLookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<p><em>hint</em> queries that end with a ‘.’ are fully qualified names and are cheaper lookups</p>\n<h5 id=\"arguments-7\"><a class=\"doc-anchor\" href=\"#arguments-7\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a string which parses to a domain name, failure to parse will return an error</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.soa_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">soa_lookup</a>&lt;N&gt;(&amp;self, query: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SoaLookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<p><em>hint</em> queries that end with a ‘.’ are fully qualified names and are cheaper lookups</p>\n<h5 id=\"arguments-8\"><a class=\"doc-anchor\" href=\"#arguments-8\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a string which parses to a domain name, failure to parse will return an error</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.srv_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">srv_lookup</a>&lt;N&gt;(&amp;self, query: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SrvLookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<p><em>hint</em> queries that end with a ‘.’ are fully qualified names and are cheaper lookups</p>\n<h5 id=\"arguments-9\"><a class=\"doc-anchor\" href=\"#arguments-9\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a string which parses to a domain name, failure to parse will return an error</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tlsa_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">tlsa_lookup</a>&lt;N&gt;(&amp;self, query: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;TlsaLookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<p><em>hint</em> queries that end with a ‘.’ are fully qualified names and are cheaper lookups</p>\n<h5 id=\"arguments-10\"><a class=\"doc-anchor\" href=\"#arguments-10\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a string which parses to a domain name, failure to parse will return an error</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.txt_lookup\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">txt_lookup</a>&lt;N&gt;(&amp;self, query: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;TxtLookup, ResolveError&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class=\"docblock\"><p>Performs a lookup for the associated type.</p>\n<p><em>hint</em> queries that end with a ‘.’ are fully qualified names and are cheaper lookups</p>\n<h5 id=\"arguments-11\"><a class=\"doc-anchor\" href=\"#arguments-11\">§</a>Arguments</h5>\n<ul>\n<li><code>query</code> - a string which parses to a domain name, failure to parse will return an error</li>\n</ul>\n</div></details></div></details>",0,"iroh::net::dns::DnsResolver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncResolver%3CR%3E\" class=\"impl\"><a href=\"#impl-AsyncResolver%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; AsyncResolver&lt;R&gt;<div class=\"where\">where\n    R: ConnectionProvider,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    config: ResolverConfig,\n    options: ResolverOpts,\n    provider: R\n) -&gt; AsyncResolver&lt;R&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new generic <code>AsyncResolver</code> with the provided configuration.</p>\n<p>see [TokioAsyncResolver::tokio(..)] instead.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">§</a>Arguments</h5>\n<ul>\n<li><code>config</code> - configuration, name_servers, etc. for the Resolver</li>\n<li><code>options</code> - basic lookup options for the resolver</li>\n</ul>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<p>A tuple containing the new <code>AsyncResolver</code> and a future that drives the\nbackground task that runs resolutions for the <code>AsyncResolver</code>. See the\ndocumentation for <code>AsyncResolver</code> for more information on how to use\nthe background future.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_system_conf\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_system_conf</a>(runtime: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AsyncResolver&lt;R&gt;, ResolveError&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new Resolver with the system configuration.</p>\n<p>see [TokioAsyncResolver::tokio_from_system_conf(..)] instead.</p>\n<p>This will use <code>/etc/resolv.conf</code> on Unix OSes and the registry on Windows.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_cache\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_cache</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Flushes/Removes all entries from the cache</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.config\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">config</a>(&amp;self) -&gt; &amp;ResolverConfig</h4></section></summary><div class=\"docblock\"><p>Read the config for this resolver.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.options\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">options</a>(&amp;self) -&gt; &amp;ResolverOpts</h4></section></summary><div class=\"docblock\"><p>Read the options for this resolver.</p>\n</div></details></div></details>",0,"iroh::net::dns::DnsResolver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-AsyncResolver%3CP%3E\" class=\"impl\"><a href=\"#impl-Clone-for-AsyncResolver%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for AsyncResolver&lt;P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ConnectionProvider,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; AsyncResolver&lt;P&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","iroh::net::dns::DnsResolver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-AsyncResolver%3CP%3E\" class=\"impl\"><a href=\"#impl-Debug-for-AsyncResolver%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for AsyncResolver&lt;P&gt;<div class=\"where\">where\n    P: ConnectionProvider,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iroh::net::dns::DnsResolver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ResolverExt-for-AsyncResolver%3CGenericConnector%3CTokioRuntimeProvider%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#185\">source</a><a href=\"#impl-ResolverExt-for-AsyncResolver%3CGenericConnector%3CTokioRuntimeProvider%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"iroh/net/dns/trait.ResolverExt.html\" title=\"trait iroh::net::dns::ResolverExt\">ResolverExt</a> for AsyncResolver&lt;GenericConnector&lt;TokioRuntimeProvider&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_ipv4_ipv6\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#209-213\">source</a><a href=\"#method.lookup_ipv4_ipv6\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_ipv4_ipv6\" class=\"fn\">lookup_ipv4_ipv6</a>&lt;N&gt;(\n    &amp;self,\n    host: N,\n    timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    N: IntoName + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Resolve IPv4 and IPv6 in parallel.</p>\n<p><code>LookupIpStrategy::Ipv4AndIpv6</code> will wait for ipv6 resolution timeout, even if it is\nnot usable on the stack, so we manually query both lookups concurrently and time them out\nindividually.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_by_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#233\">source</a><a href=\"#method.lookup_by_name\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_by_name\" class=\"fn\">lookup_by_name</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"iroh/net/struct.NodeAddr.html\" title=\"struct iroh::net::NodeAddr\">NodeAddr</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Looks up node info by DNS name.</p>\n<p>The resource records returned for <code>name</code> must either contain an <a href=\"iroh/net/dns/node_info/constant.IROH_TXT_NAME.html\" title=\"constant iroh::net::dns::node_info::IROH_TXT_NAME\"><code>node_info::IROH_TXT_NAME</code></a> TXT\nrecord or be a CNAME record that leads to an <a href=\"iroh/net/dns/node_info/constant.IROH_TXT_NAME.html\" title=\"constant iroh::net::dns::node_info::IROH_TXT_NAME\"><code>node_info::IROH_TXT_NAME</code></a> TXT record.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_by_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#240\">source</a><a href=\"#method.lookup_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_by_id\" class=\"fn\">lookup_by_id</a>(\n    &amp;self,\n    node_id: &amp;<a class=\"struct\" href=\"iroh/net/key/struct.PublicKey.html\" title=\"struct iroh::net::key::PublicKey\">PublicKey</a>,\n    origin: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"iroh/net/struct.NodeAddr.html\" title=\"struct iroh::net::NodeAddr\">NodeAddr</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Looks up node info by <a href=\"iroh/net/type.NodeId.html\" title=\"type iroh::net::NodeId\"><code>NodeId</code></a> and origin domain name.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_ipv4_staggered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#253-258\">source</a><a href=\"#method.lookup_ipv4_staggered\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_ipv4_staggered\" class=\"fn\">lookup_ipv4_staggered</a>&lt;N&gt;(\n    &amp;self,\n    host: N,\n    timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>,\n    delays_ms: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    N: IntoName + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Perform an ipv4 lookup with a timeout in a staggered fashion.</p>\n<p>From the moment this function is called, each lookup is scheduled after the delays in\n<code>delays_ms</code> with the first call being done immediately. <code>[200ms, 300ms]</code> results in calls\nat T+0ms, T+200ms and T+300ms. The <code>timeout</code> is applied to each call individually. The\nresult of the first successful call is returned, or a summary of all errors otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_ipv6_staggered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#269-274\">source</a><a href=\"#method.lookup_ipv6_staggered\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_ipv6_staggered\" class=\"fn\">lookup_ipv6_staggered</a>&lt;N&gt;(\n    &amp;self,\n    host: N,\n    timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>,\n    delays_ms: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    N: IntoName + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Perform an ipv6 lookup with a timeout in a staggered fashion.</p>\n<p>From the moment this function is called, each lookup is scheduled after the delays in\n<code>delays_ms</code> with the first call being done immediately. <code>[200ms, 300ms]</code> results in calls\nat T+0ms, T+200ms and T+300ms. The <code>timeout</code> is applied to each call individually. The\nresult of the first successful call is returned, or a summary of all errors otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_ipv4_ipv6_staggered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#286-291\">source</a><a href=\"#method.lookup_ipv4_ipv6_staggered\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_ipv4_ipv6_staggered\" class=\"fn\">lookup_ipv4_ipv6_staggered</a>&lt;N&gt;(\n    &amp;self,\n    host: N,\n    timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>,\n    delays_ms: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    N: IntoName + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Race an ipv4 and ipv6 lookup with a timeout in a staggered fashion.</p>\n<p>From the moment this function is called, each lookup is scheduled after the delays in\n<code>delays_ms</code> with the first call being done immediately. <code>[200ms, 300ms]</code> results in calls\nat T+0ms, T+200ms and T+300ms. The <code>timeout</code> is applied as stated in\n[<code>Self::lookup_ipv4_ipv6</code>]. The result of the first successful call is returned, or a\nsummary of all errors otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_by_name_staggered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#302\">source</a><a href=\"#method.lookup_by_name_staggered\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_by_name_staggered\" class=\"fn\">lookup_by_name_staggered</a>(\n    &amp;self,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    delays_ms: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"iroh/net/struct.NodeAddr.html\" title=\"struct iroh::net::NodeAddr\">NodeAddr</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Looks up node info by DNS name in a staggered fashion.</p>\n<p>From the moment this function is called, each lookup is scheduled after the delays in\n<code>delays_ms</code> with the first call being done immediately. <code>[200ms, 300ms]</code> results in calls\nat T+0ms, T+200ms and T+300ms. The result of the first successful call is returned, or a\nsummary of all errors otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_by_id_staggered\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#313-318\">source</a><a href=\"#method.lookup_by_id_staggered\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_by_id_staggered\" class=\"fn\">lookup_by_id_staggered</a>(\n    &amp;self,\n    node_id: &amp;<a class=\"struct\" href=\"iroh/net/key/struct.PublicKey.html\" title=\"struct iroh::net::key::PublicKey\">PublicKey</a>,\n    origin: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    delays_ms: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"iroh/net/struct.NodeAddr.html\" title=\"struct iroh::net::NodeAddr\">NodeAddr</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Looks up node info by <a href=\"iroh/net/type.NodeId.html\" title=\"type iroh::net::NodeId\"><code>NodeId</code></a> and origin domain name.</p>\n<p>From the moment this function is called, each lookup is scheduled after the delays in\n<code>delays_ms</code> with the first call being done immediately. <code>[200ms, 300ms]</code> results in calls\nat T+0ms, T+200ms and T+300ms. The result of the first successful call is returned, or a\nsummary of all errors otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_ipv4\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#186-190\">source</a><a href=\"#method.lookup_ipv4\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_ipv4\" class=\"fn\">lookup_ipv4</a>&lt;N&gt;(\n    &amp;self,\n    host: N,\n    timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class='docblock'>Perform an ipv4 lookup with a timeout.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_ipv6\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/iroh_net/dns.rs.html#195-199\">source</a><a href=\"#method.lookup_ipv6\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"iroh/net/dns/trait.ResolverExt.html#tymethod.lookup_ipv6\" class=\"fn\">lookup_ipv6</a>&lt;N&gt;(\n    &amp;self,\n    host: N,\n    timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/net/ip_addr/enum.IpAddr.html\" title=\"enum core::net::ip_addr::IpAddr\">IpAddr</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.91/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;<div class=\"where\">where\n    N: IntoName,</div></h4></section></summary><div class='docblock'>Perform an ipv6 lookup with a timeout.</div></details></div></details>","ResolverExt","iroh::net::dns::DnsResolver"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()